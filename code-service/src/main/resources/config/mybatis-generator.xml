<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!-- 引入配置文件 -->
    <properties resource="generator.properties"/>

    <!-- 一个数据库一个context,context的子元素必须按照它给出的顺序
        property*,plugin*,commentGenerator?,jdbcConnection,javaTypeResolver?,
        javaModelGenerator,sqlMapGenerator?,javaClientGenerator?,table+
    -->

    <!--Mybatis上下文-->
    <!--
    id : 随便填，保证多个 context id 不重复就行
    defaultModelType ： 可以不填，默认值 conditional，flat表示一张表对应一个po
    targetRuntime ：可以不填，默认值 MyBatis3，常用的还有 MyBatis3Simple，这个配置会影响生成的 dao 和 mapper.xml的内容
    -->
    <context id="MySqlContext" targetRuntime="MyBatis3" defaultModelType="flat">
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 为模型生成序列化方法-->
        <!--        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>-->
        <!--生成mapper.xml时覆盖原文件-->
        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin"/>
        <!-- 为生成的Java模型创建一个toString方法 -->
        <!--        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>-->
        <!--可以自定义生成model的代码注释-->
        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
            <!-- 不希望生成的注释中包含时间戳 -->
            <property name="suppressDate" value="true"/>
            <!-- 添加 db 表中字段的注释，只有suppressAllComments为false时才生效 -->
            <property name="addRemarkComments" value="true"/>
        </commentGenerator>

        <!-- jdbc连接 -->
        <jdbcConnection driverClass="${jdbc.driverClassName}"
                        connectionURL="${jdbc.url}"
                        userId="${jdbc.username}"
                        password="${jdbc.password}">
            <!--高版本的 mysql-connector-java 需要设置 nullCatalogMeansCurrent=true-->
            <property name="nullCatalogMeansCurrent" value="true"/>
        </jdbcConnection>

        <!--配置 JDBC 与 java 的类型转换规则-->
        <!--只能配置 bigDecimal 类型和时间类型的转换-->
        <javaTypeResolver>
            <!--是否使用 bigDecimal，默认false。
                false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
                true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal-->
            <property name="forceBigDecimals" value="true"/>
            <!--默认false
                false，将所有 JDBC 的时间类型解析为 java.util.Date
                true，将 JDBC 的时间类型按如下规则解析
                    DATE	                -> java.time.LocalDate
                    TIME	                -> java.time.LocalTime
                    TIMESTAMP               -> java.time.LocalDateTime
                    TIME_WITH_TIMEZONE  	-> java.time.OffsetTime
                    TIMESTAMP_WITH_TIMEZONE	-> java.time.OffsetDateTime
                -->
            <property name="useJSR310Types" value="true"/>
        </javaTypeResolver>

        <!--实体类生成的包路径和项目路径-->
        <javaModelGenerator targetPackage="cn.code.entity" targetProject="src/main/java">
            <!-- 是否让schema作为包的后缀，默认为false -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否针对string类型的字段在set方法中进行修剪，默认false -->
            <property name="trimStrings" value="false"/>
        </javaModelGenerator>

        <!--mybatis 的xml文件地址-->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!--mybatis的mapper接口-->
        <!--XMLMAPPER：接口的实现放在 mapper.xml
        ANNOTATEDMAPPER：接口的实现通过注解写在接口上面-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="cn.code.mapper"
                             targetProject="src/main/java">
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!-- 要生成的表 -->
        <!-- schema为数据库名，oracle需要配置，mysql不需要配置。
            tableName：为对应的数据库表名
            domainObjectName：是要生成的实体类名(可以不指定)，不配置时，它会按照帕斯卡命名法将表名转换成类名
            enableXXXByExample：默认为 true， 为 true 会生成一个对应Example帮助类，帮助你进行条件查询，不想要可以设为false，只有在targetRuntime="MyBatis3"时才生效
        -->
        <!--生成全部表tableName设为%-->
        <table tableName="t_file" domainObjectName="File" enableCountByExample="false"
               enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
            <!--是否使用实际列名,默认为false-->
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
    </context>
</generatorConfiguration>
